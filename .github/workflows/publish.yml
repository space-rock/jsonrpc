name: Release Please & Publish

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      paths_released: ${{ steps.release-please.outputs.paths_released }}
      release_created: ${{ steps.release-please.outputs.release_created }}
      # Package-specific release outputs
      types_release_created: ${{ steps.release-please.outputs['packages/types--release_created'] }}
      client_release_created: ${{ steps.release-please.outputs['packages/client--release_created'] }}
      types_version: ${{ steps.release-please.outputs['packages/types--version'] }}
      client_version: ${{ steps.release-please.outputs['packages/client--version'] }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Release Please
        id: release-please
        uses: googleapis/release-please-action@v4
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  build-and-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Verify build outputs
        run: |
          echo "Checking build outputs..."
          ls -la packages/types/dist/ || echo "types dist not found"
          ls -la packages/client/dist/ || echo "client dist not found"

      - name: Publish Types Package
        if: ${{ needs.release-please.outputs.types_release_created == 'true' }}
        run: |
          cd packages/types

          # Publish with detailed output
          pnpm publish --access public --no-git-checks

          if [[ $? -eq 0 ]]; then
            echo "✅ Successfully published @space-rock/jsonrpc-types"
          else
            echo "❌ Failed to publish @space-rock/jsonrpc-types"
            exit 1
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Client Package
        if: ${{ needs.release-please.outputs.client_release_created == 'true' }}
        run: |
          cd packages/client

          # Publish with detailed output
          pnpm publish --access public --no-git-checks

          if [[ $? -eq 0 ]]; then
            echo "✅ Successfully published @space-rock/jsonrpc-client"
          else
            echo "❌ Failed to publish @space-rock/jsonrpc-client"
            exit 1
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
