name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run codegen
        run: pnpm run codegen

      - name: Run prettier check
        run: pnpm run format:check

      - name: Run tests with coverage
        run: pnpm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Build packages
        run: pnpm run build

      - name: Run type check
        run: pnpm run typecheck

  deploy-dry-run:
    name: Deploy Dry Run
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run codegen
        run: pnpm run codegen

      - name: Build packages
        run: pnpm run build

      - name: Dry run npm publish - types
        run: |
          cd packages/types
          npm pack --dry-run
          echo "✅ @space-rock/jsonrpc-types package is ready for publishing"

      - name: Dry run npm publish - client
        run: |
          cd packages/client
          npm pack --dry-run
          echo "✅ @space-rock/jsonrpc-client package is ready for publishing"
